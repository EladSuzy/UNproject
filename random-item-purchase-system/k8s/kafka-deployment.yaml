apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redpanda
  labels:
    app: redpanda
spec:
  serviceName: redpanda
  replicas: 1
  selector:
    matchLabels:
      app: redpanda
  template:
    metadata:
      labels:
        app: redpanda
    spec:
      containers:
        - name: redpanda
          image: docker.redpanda.com/redpandadata/redpanda:v23.1.1
          imagePullPolicy: IfNotPresent
          ports:
            - name: kafka
              containerPort: 9092
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "256Mi"
              cpu: "200m"
          command:
            - /usr/bin/rpk
            - redpanda
            - start
            - --mode
            - dev-container
            - --smp
            - "1"
            - --memory
            - "128M"
            - --reserve-memory
            - "0M"
            - --overprovisioned
            - --node-id
            - "0"
            - --check=false
            - --kafka-addr
            - "0.0.0.0:9092"
            - --advertise-kafka-addr
            - "$(POD_IP):9092"
            - --set
            - "redpanda.developer_mode=true"
            - --set
            - "redpanda.cluster_id=0"
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          volumeMounts:
            - name: redpanda-data
              mountPath: /var/lib/redpanda/data
  volumeClaimTemplates:
    - metadata:
        name: redpanda-data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: redpanda
spec:
  ports:
    - name: kafka
      port: 9092
      targetPort: 9092
  selector:
    app: redpanda
  type: ClusterIP
